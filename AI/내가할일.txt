옆으로. 손가락으로.
속도 넣ㅇ는 걸로. (빠름/느림)
달리기/수영/날기
달리기, 수영에서의 점프. 
날개는 속도 자체가 장애물인 걸로.



한 프레임 내에 몇 장이 나오는지를 해보면?

두 손가락 각도를 보내드리면 됨.
두 손가락의 각도, time을 json형식으로 txt파일 실시간으로 작성

달리기, 수영: 손목과 손가락 등 뼈가 일직선상에 있을 때
날기: 각 wrist가 겹쳐 있을 때의 손가락 드 ㅇ뼈

바닥이랑 랜드마크 사이 거리값보내드리기

오늘 목표: 달리기, 수영, 날기 모션별 print하기
	맨 처음 거리보다 1.5배 이상 올라간 경우 점프라고 인식하도록 신호 보내기.

# 점프라고 인식? 1초 전 프레임과 비교햇을 때.. (초마다 좌표값 저장.)
# 점프라고 인식한 사실만 보내면 됨.
# 


1. 각도 보내주면서 y좌표 1초마다 저장 ㅇ
2. y좌표가 이전에 비해 1.5배만큼 튀면 updown변수에 +1
3. y좌표가 이전에 비해 1.5배만큼 작아지면 updown변수 -1

# 지금 1-2, 2, 3을 같이 하고 잇음.

게임 시작과 동시에 파이썬 코드가 실행되도록 해야...

계속 위에 잇다가 내려오면 그게 1이 되도록 하고 싶다.
0.2초 전꺼랑 비교?
s


time(float), d(float)(수영/달리기), 날기
, updown(int), 

json으로 한다고 햇을 때는 덮어쓰는 걸로

# 중지 손가락 긑응로 햇을 때는
0.3, 0.4~0.7, 0.8 정도인 듯?


        # 딜레이 3초
        if not start:
            start=True
            print('3초뒤 시작:')
            time.sleep(3)

# 카메라에 화면이 출력되는 채로 3초대기? 이거 그냥 검은 화면에 출력대기하고 바로 시작하도록 하자
	-> ㅇㅋ 알아서 하심

#### mediapipeHand_3dAngle_copy.py 위에 주석 읽어보고
# updown 검사, y좌표 갱신 부분 -> 완료!
# 날기 양손 각도 체크 -> 뒤집어서로 하기로! ㅇ
# 매 프레임마다? 메모장에 쓰기. 
# 메모장에는 각도(수영/달리기, 날기), updown 여부 적혀 있어야.


## json파일 작성!!!!!!!!!!!! 각도 2개랑 updown 

# 손이 두 개면 두 손 사이 각도, 하나이면 손가락 사이 각도 나오도록 했으므로
# 플레이어에게 지시를 명확히 해야 함.
# 경고메시지: 반드시!!!!! 한 손만!! 반드시!! 두 손 나오도록!!!!


## time 보내드리기

# 평면상의 각도!!
# 4시까지 제출. 6시까지 투표. 8시 30분에 발표팀 선정.
# 9시에 8팀 바로 발표. 발표 자료, 시연 영상 같이 준비해라.

# 설치 패키지

import mediapipe as mp
import cv2
import time
import numpy as np
import vg
import json
import math

pip install opencv-python
pip install mediapipe opencv-python
pip install numpy




8, 9, 12 -> 달리기, 수영
12, 9 -> 날기

8, 9, 12
str로 주기
str( [ x, y, x,y, x,y, updown ] )


